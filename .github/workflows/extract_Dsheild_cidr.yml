name: Extract SANS Dsheild CIDR Notations

on:
  schedule:
    # Run the job daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  extract_cidr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install curl
      run: sudo apt-get install -y curl

    - name: Run bash script
      run: |
        #!/bin/bash

        # Function to download the list from https://www.dshield.org/block.txt
        download_list() {
            url="https://www.dshield.org/block.txt"
            local_file="block.txt"

            # Check if curl is installed
            if ! command -v curl &> /dev/null; then
                echo "curl is not installed. Please install curl and try again."
                return 1
            fi

            # Download the list
            if curl -s -o "$local_file" "$url"; then
                echo "List downloaded successfully as $local_file"
            else
                echo "Failed to download the list from $url"
                return 1
            fi
        }

        # Function to extract CIDR notations from the list
        extract_cidr() {
            local_file="$1"
            output_file="cidr_list.txt"
            > $output_file

            # Loop through each line of the input file
            while IFS=$'\t' read -r col1 col2 col3 rest; do
                # Check if the line starts with '#' (comment)
                if [[ "$col1" == \#* ]]; then
                    continue
                fi

                # Construct the CIDR notation using column 1 (start of netblock) and column 3 (subnet)
                cidr="$col1/$col3"
                echo "$cidr" >> $output_file
            done < "$local_file"
        }

        # Main script
        download_list

        if [ -f "block.txt" ]; then
            extract_cidr "block.txt"
        else
            echo "Failed to download the list. Exiting."
            exit 1
        fi

    - name: Commit the resulting file
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add cidr_list.txt
        git commit -m "Update CIDR list" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
